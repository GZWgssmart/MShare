<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserTransinDAO">

    <insert id="save" parameterType="userTransinDO">
        insert into t_trans
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="transTransFrom != null">
				trans_from,
			</if>
			<if test="transTransTo != null">
				trans_to,
			</if>
			<if test="transTotal != null">
				total,
			</if>
			<if test="transTransTime != null">
				trans_time,
			</if>
			<if test="transCreateTime != null">
				create_time,
			</if>
			<if test="transUpdateTime != null">
				update_time,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="transTransFrom != null">
				#{transTransFrom},
			</if>
			<if test="transTransTo != null">
				#{transTransTo},
			</if>
			<if test="transTotal != null">
				#{transTotal},
			</if>
			<if test="transTransTime != null">
				#{transTransTime},
			</if>
			<if test="transCreateTime != null">
				#{transCreateTime},
			</if>
			<if test="transUpdateTime != null">
				#{transUpdateTime},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="userTransinDO">
        delete from t_trans where id = #{transId}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_trans where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_trans where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="userTransinDO">
        update t_trans
        <set>
            <if test="transTransFrom != null">
				trans_from = #{transTransFrom},
			</if>
			<if test="transTransTo != null">
				trans_to = #{transTransTo},
			</if>
			<if test="transTotal != null">
				total = #{transTotal},
			</if>
			<if test="transTransTime != null">
				trans_time = #{transTransTime},
			</if>
			<if test="transCreateTime != null">
				create_time = #{transCreateTime},
			</if>
			<if test="transUpdateTime != null">
				update_time = #{transUpdateTime},
			</if>
			
        </set>
        where id = #{transId}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_trans set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_trans set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        t_trans.id as transId, t_trans.trans_from as transTransFrom,
        (select t_user.nickname from t_user where t_user.id = t_trans.trans_from) as fromNickname,
         (select t_user.phone from t_user where t_user.id = t_trans.trans_from) as fromPhone,
         (select t_user.headicon from t_user where t_user.id = t_trans.trans_from) as fromHeadicon,
        t_trans.trans_to as transTransTo, t_trans.total as transTotal, t_trans.trans_time as transTransTime, t_trans.create_time as transCreateTime, t_trans.update_time as transUpdateTime, t_user.id as userId, t_user.phone as userPhone, t_user.nickname as userNickname, t_user.headicon as userHeadicon
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.transId != null">
			t_trans.id = #{query.transId}
		</if>
		<if test="query != null and query.transTransFrom != null">
			and t_trans.trans_from = #{query.transTransFrom}
		</if>
		<if test="query != null and query.transTransTo != null">
			and t_trans.trans_to = #{query.transTransTo}
		</if>
		<if test="query != null and query.transTotal != null">
			and t_trans.total = #{query.transTotal}
		</if>
		<if test="query != null and query.transTransTimeStart != null and query.transTransTimeEnd == null">
			and t_trans.trans_time <![CDATA[ >= ]]> #{query.transTransTimeStart}
		</if>
		<if test="query != null and query.transTransTimeStart == null and query.transTransTimeEnd != null">
			and t_trans.trans_time <![CDATA[ <= ]]> #{query.transTransTimeEnd}
		</if>
		<if test="query != null and query.transTransTimeStart != null and query.transTransTimeEnd != null">
			and t_trans.trans_time <![CDATA[ >= ]]> #{query.transTransTimeStart} and t_trans.trans_time <![CDATA[ <= ]]> #{query.transTransTimeEnd}
		</if>
		<if test="query != null and query.transCreateTimeStart != null and query.transCreateTimeEnd == null">
			and t_trans.create_time <![CDATA[ >= ]]> #{query.transCreateTimeStart}
		</if>
		<if test="query != null and query.transCreateTimeStart == null and query.transCreateTimeEnd != null">
			and t_trans.create_time <![CDATA[ <= ]]> #{query.transCreateTimeEnd}
		</if>
		<if test="query != null and query.transCreateTimeStart != null and query.transCreateTimeEnd != null">
			and t_trans.create_time <![CDATA[ >= ]]> #{query.transCreateTimeStart} and t_trans.create_time <![CDATA[ <= ]]> #{query.transCreateTimeEnd}
		</if>
		<if test="query != null and query.transUpdateTime != null and query.transUpdateTime != ''">
			and t_trans.update_time like concat('%', #{query.transUpdateTime}, '%')
		</if>
		<if test="query != null and query.userId != null">
			and t_user.id = #{query.userId}
		</if>
		<if test="query != null and query.userPhone != null and query.userPhone != ''">
			and t_user.phone like concat('%', #{query.userPhone}, '%')
		</if>
		<if test="query != null and query.userNickname != null and query.userNickname != ''">
			and t_user.nickname like concat('%', #{query.userNickname}, '%')
		</if>
		<if test="query != null and query.userHeadicon != null and query.userHeadicon != ''">
			and t_user.headicon like concat('%', #{query.userHeadicon}, '%')
		</if>
		
        and
        t_user.id = t_trans.trans_to
    </sql>

    <select id="getById" parameterType="long" resultType="userTransinDO">
        select
        <include refid="select_columns"/>
        from t_trans, t_user where t_trans.id = #{id} and
        t_user.id = t_trans.trans_to
    </select>

    <select id="listAll" resultType="userTransinDO">
        select
        <include refid="select_columns"/>
        from t_trans, t_user
        where
        t_user.id = t_trans.trans_to
        order by t_trans.update_time desc, t_trans.create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="userTransinDO">
        select
        <include refid="select_columns"/>
        from t_trans, t_user
        where
        t_user.id = t_trans.trans_to
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            t_trans.update_time desc, t_trans.create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_trans, t_user
        where
        t_user.id = t_trans.trans_to
    </select>

    <select id="listPageByCondition" resultType="userTransinDO">
        select
        <include refid="select_columns"/>
        from t_trans, t_user
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            t_trans.update_time desc, t_trans.create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_trans, t_user
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
