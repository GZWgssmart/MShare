<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserTotalScoreDAO">

    <insert id="save" parameterType="userTotalScoreDO">
        insert into t_total_score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="totalScoreUserId != null">
				user_id,
			</if>
			<if test="totalScoreTotal != null">
				total,
			</if>
			<if test="totalScoreScore != null">
				score,
			</if>
			<if test="totalScoreCreateTime != null">
				create_time,
			</if>
			<if test="totalScoreUpdateTime != null">
				update_time,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="totalScoreUserId != null">
				#{totalScoreUserId},
			</if>
			<if test="totalScoreTotal != null">
				#{totalScoreTotal},
			</if>
			<if test="totalScoreScore != null">
				#{totalScoreScore},
			</if>
			<if test="totalScoreCreateTime != null">
				#{totalScoreCreateTime},
			</if>
			<if test="totalScoreUpdateTime != null">
				#{totalScoreUpdateTime},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="userTotalScoreDO">
        delete from t_total_score where id = #{totalScoreId}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_total_score where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_total_score where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="userTotalScoreDO">
        update t_total_score
        <set>
            <if test="totalScoreUserId != null">
				user_id = #{totalScoreUserId},
			</if>
			<if test="totalScoreTotal != null">
				total = #{totalScoreTotal},
			</if>
			<if test="totalScoreScore != null">
				score = #{totalScoreScore},
			</if>
			<if test="totalScoreCreateTime != null">
				create_time = #{totalScoreCreateTime},
			</if>
			<if test="totalScoreUpdateTime != null">
				update_time = #{totalScoreUpdateTime},
			</if>
			
        </set>
        where id = #{totalScoreId}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_total_score set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_total_score set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        t_total_score.id as totalScoreId, t_total_score.user_id as totalScoreUserId, t_total_score.total as totalScoreTotal, t_total_score.score as totalScoreScore, t_total_score.create_time as totalScoreCreateTime, t_total_score.update_time as totalScoreUpdateTime, t_user.id as userId, t_user.phone as userPhone, t_user.nickname as userNickname, t_user.headicon as userHeadicon
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.totalScoreId != null">
			t_total_score.id = #{query.totalScoreId}
		</if>
		<if test="query != null and query.totalScoreUserId != null">
			and t_total_score.user_id = #{query.totalScoreUserId}
		</if>
		<if test="query != null and query.totalScoreTotal != null">
			and t_total_score.total = #{query.totalScoreTotal}
		</if>
		<if test="query != null and query.totalScoreScore != null">
			and t_total_score.score = #{query.totalScoreScore}
		</if>
		<if test="query != null and query.totalScoreCreateTimeStart != null and query.totalScoreCreateTimeEnd == null">
			and t_total_score.create_time <![CDATA[ >= ]]> #{query.totalScoreCreateTimeStart}
		</if>
		<if test="query != null and query.totalScoreCreateTimeStart == null and query.totalScoreCreateTimeEnd != null">
			and t_total_score.create_time <![CDATA[ <= ]]> #{query.totalScoreCreateTimeEnd}
		</if>
		<if test="query != null and query.totalScoreCreateTimeStart != null and query.totalScoreCreateTimeEnd != null">
			and t_total_score.create_time <![CDATA[ >= ]]> #{query.totalScoreCreateTimeStart} and t_total_score.create_time <![CDATA[ <= ]]> #{query.totalScoreCreateTimeEnd}
		</if>
		<if test="query != null and query.totalScoreUpdateTimeStart != null and query.totalScoreUpdateTimeEnd == null">
			and t_total_score.update_time <![CDATA[ >= ]]> #{query.totalScoreUpdateTimeStart}
		</if>
		<if test="query != null and query.totalScoreUpdateTimeStart == null and query.totalScoreUpdateTimeEnd != null">
			and t_total_score.update_time <![CDATA[ <= ]]> #{query.totalScoreUpdateTimeEnd}
		</if>
		<if test="query != null and query.totalScoreUpdateTimeStart != null and query.totalScoreUpdateTimeEnd != null">
			and t_total_score.update_time <![CDATA[ >= ]]> #{query.totalScoreUpdateTimeStart} and t_total_score.update_time <![CDATA[ <= ]]> #{query.totalScoreUpdateTimeEnd}
		</if>
		<if test="query != null and query.userId != null">
			and t_user.id = #{query.userId}
		</if>
		<if test="query != null and query.userPhone != null and query.userPhone != ''">
			and t_user.phone like concat('%', #{query.userPhone}, '%')
		</if>
		<if test="query != null and query.userNickname != null and query.userNickname != ''">
			and t_user.nickname like concat('%', #{query.userNickname}, '%')
		</if>
		<if test="query != null and query.userHeadicon != null and query.userHeadicon != ''">
			and t_user.headicon like concat('%', #{query.userHeadicon}, '%')
		</if>
		
        and
        t_user.id = t_total_score.user_id
    </sql>

    <select id="getById" parameterType="long" resultType="userTotalScoreDO">
        select
        <include refid="select_columns"/>
        from t_total_score, t_user where t_total_score.id = #{id} and
        t_user.id = t_total_score.user_id
    </select>

    <select id="listAll" resultType="userTotalScoreDO">
        select
        <include refid="select_columns"/>
        from t_total_score, t_user
        where
        t_user.id = t_total_score.user_id
        order by t_total_score.update_time desc, t_total_score.create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="userTotalScoreDO">
        select
        <include refid="select_columns"/>
        from t_total_score, t_user
        where
        t_user.id = t_total_score.user_id
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            t_total_score.update_time desc, t_total_score.create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_total_score, t_user
        where
        t_user.id = t_total_score.user_id
    </select>

    <select id="listPageByCondition" resultType="userTotalScoreDO">
        select
        <include refid="select_columns"/>
        from t_total_score, t_user
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            t_total_score.update_time desc, t_total_score.create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_total_score, t_user
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
