<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserSuggestDAO">

    <insert id="save" parameterType="userSuggestDO">
        insert into t_suggest
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="suggestUserId != null">
				user_id,
			</if>
			<if test="suggestSuggest != null">
				suggest,
			</if>
			<if test="suggestCreateTime != null">
				create_time,
			</if>
			<if test="suggestUpdateTime != null">
				update_time,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="suggestUserId != null">
				#{suggestUserId},
			</if>
			<if test="suggestSuggest != null">
				#{suggestSuggest},
			</if>
			<if test="suggestCreateTime != null">
				#{suggestCreateTime},
			</if>
			<if test="suggestUpdateTime != null">
				#{suggestUpdateTime},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="userSuggestDO">
        delete from t_suggest where id = #{suggestId}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_suggest where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_suggest where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="userSuggestDO">
        update t_suggest
        <set>
            <if test="suggestUserId != null">
				user_id = #{suggestUserId},
			</if>
			<if test="suggestSuggest != null">
				suggest = #{suggestSuggest},
			</if>
			<if test="suggestCreateTime != null">
				create_time = #{suggestCreateTime},
			</if>
			<if test="suggestUpdateTime != null">
				update_time = #{suggestUpdateTime},
			</if>
			
        </set>
        where id = #{suggestId}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_suggest set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_suggest set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        t_suggest.id as suggestId, t_suggest.user_id as suggestUserId, t_suggest.suggest as suggestSuggest, t_suggest.create_time as suggestCreateTime, t_suggest.update_time as suggestUpdateTime, t_user.id as userId, t_user.phone as userPhone, t_user.nickname as userNickname, t_user.headicon as userHeadicon
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.suggestId != null">
			t_suggest.id = #{query.suggestId}
		</if>
		<if test="query != null and query.suggestUserId != null">
			and t_suggest.user_id = #{query.suggestUserId}
		</if>
		<if test="query != null and query.suggestSuggest != null and query.suggestSuggest != ''">
			and t_suggest.suggest like concat('%', #{query.suggestSuggest}, '%')
		</if>
		<if test="query != null and query.suggestCreateTimeStart != null and query.suggestCreateTimeEnd == null">
			and t_suggest.create_time <![CDATA[ >= ]]> #{query.suggestCreateTimeStart}
		</if>
		<if test="query != null and query.suggestCreateTimeStart == null and query.suggestCreateTimeEnd != null">
			and t_suggest.create_time <![CDATA[ <= ]]> #{query.suggestCreateTimeEnd}
		</if>
		<if test="query != null and query.suggestCreateTimeStart != null and query.suggestCreateTimeEnd != null">
			and t_suggest.create_time <![CDATA[ >= ]]> #{query.suggestCreateTimeStart} and t_suggest.create_time <![CDATA[ <= ]]> #{query.suggestCreateTimeEnd}
		</if>
		<if test="query != null and query.suggestUpdateTimeStart != null and query.suggestUpdateTimeEnd == null">
			and t_suggest.update_time <![CDATA[ >= ]]> #{query.suggestUpdateTimeStart}
		</if>
		<if test="query != null and query.suggestUpdateTimeStart == null and query.suggestUpdateTimeEnd != null">
			and t_suggest.update_time <![CDATA[ <= ]]> #{query.suggestUpdateTimeEnd}
		</if>
		<if test="query != null and query.suggestUpdateTimeStart != null and query.suggestUpdateTimeEnd != null">
			and t_suggest.update_time <![CDATA[ >= ]]> #{query.suggestUpdateTimeStart} and t_suggest.update_time <![CDATA[ <= ]]> #{query.suggestUpdateTimeEnd}
		</if>
		<if test="query != null and query.userId != null">
			and t_user.id = #{query.userId}
		</if>
		<if test="query != null and query.userPhone != null and query.userPhone != ''">
			and t_user.phone like concat('%', #{query.userPhone}, '%')
		</if>
		<if test="query != null and query.userNickname != null and query.userNickname != ''">
			and t_user.nickname like concat('%', #{query.userNickname}, '%')
		</if>
		<if test="query != null and query.userHeadicon != null and query.userHeadicon != ''">
			and t_user.headicon like concat('%', #{query.userHeadicon}, '%')
		</if>
		
        and
        t_user.id = t_suggest.user_id
    </sql>

    <select id="getById" parameterType="long" resultType="userSuggestDO">
        select
        <include refid="select_columns"/>
        from t_suggest, t_user where t_suggest.id = #{id} and
        t_user.id = t_suggest.user_id
    </select>

    <select id="listAll" resultType="userSuggestDO">
        select
        <include refid="select_columns"/>
        from t_suggest, t_user
        where
        t_user.id = t_suggest.user_id
        order by t_suggest.update_time desc, t_suggest.create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="userSuggestDO">
        select
        <include refid="select_columns"/>
        from t_suggest, t_user
        where
        t_user.id = t_suggest.user_id
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            t_suggest.update_time desc, t_suggest.create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_suggest, t_user
        where
        t_user.id = t_suggest.user_id
    </select>

    <select id="listPageByCondition" resultType="userSuggestDO">
        select
        <include refid="select_columns"/>
        from t_suggest, t_user
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            t_suggest.update_time desc, t_suggest.create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_suggest, t_user
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
