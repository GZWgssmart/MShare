<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.BasicSettingDAO">

    <insert id="save" parameterType="basicSettingDO">
        insert into t_basic_setting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="feePercent != null">
				fee_percent,
			</if>
			<if test="moneyPercent != null">
				money_percent,
			</if>
			<if test="scorePercent != null">
				score_percent,
			</if>
			<if test="sliderImg1 != null">
				slider_img1,
			</if>
			<if test="sliderImg2 != null">
				slider_img2,
			</if>
			<if test="sliderImg3 != null">
				slider_img3,
			</if>
			<if test="sliderImg4 != null">
				slider_img4,
			</if>
			<if test="sliderImg5 != null">
				slider_img5,
			</if>
			<if test="regBonus != null">
				reg_bonus,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="feePercent != null">
				#{feePercent},
			</if>
			<if test="moneyPercent != null">
				#{moneyPercent},
			</if>
			<if test="scorePercent != null">
				#{scorePercent},
			</if>
			<if test="sliderImg1 != null">
				#{sliderImg1},
			</if>
			<if test="sliderImg2 != null">
				#{sliderImg2},
			</if>
			<if test="sliderImg3 != null">
				#{sliderImg3},
			</if>
			<if test="sliderImg4 != null">
				#{sliderImg4},
			</if>
			<if test="sliderImg5 != null">
				#{sliderImg5},
			</if>
			<if test="regBonus != null">
				#{regBonus},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
			
        </trim>
    </insert>

    <delete id="remove" parameterType="basicSettingDO">
        delete from t_basic_setting where id = #{id}
    </delete>

    <delete id="removeById" parameterType="long">
        delete from t_basic_setting where id = #{id}
    </delete>

    <delete id="removeByIds">
        delete from t_basic_setting where id in
        <foreach item="id" collection="array" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="basicSettingDO">
        update t_basic_setting
        <set>
            <if test="feePercent != null">
				fee_percent = #{feePercent},
			</if>
			<if test="moneyPercent != null">
				money_percent = #{moneyPercent},
			</if>
			<if test="scorePercent != null">
				score_percent = #{scorePercent},
			</if>
			<if test="sliderImg1 != null">
				slider_img1 = #{sliderImg1},
			</if>
			<if test="sliderImg2 != null">
				slider_img2 = #{sliderImg2},
			</if>
			<if test="sliderImg3 != null">
				slider_img3 = #{sliderImg3},
			</if>
			<if test="sliderImg4 != null">
				slider_img4 = #{sliderImg4},
			</if>
			<if test="sliderImg5 != null">
				slider_img5 = #{sliderImg5},
			</if>
			<if test="regBonus != null">
				reg_bonus = #{regBonus},
			</if>
			<if test="createTime != null">
				create_time = #{createTime},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			
        </set>
        where id = #{id}
    </update>

    <update id="updateActiveStatus" parameterType="top.zywork.query.StatusQuery">
        update t_basic_setting set is_active = #{status} where id = #{id}
    </update>

    <update id="updateActiveStatuses" parameterType="top.zywork.query.StatusQueries">
        update t_basic_setting set is_active = #{status} where id in
        <foreach item="id" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <sql id="select_columns">
        id as id, fee_percent as feePercent, money_percent as moneyPercent, score_percent as scorePercent, slider_img1 as sliderImg1, slider_img2 as sliderImg2, slider_img3 as sliderImg3, slider_img4 as sliderImg4, slider_img5 as sliderImg5, reg_bonus as regBonus, create_time as createTime, update_time as updateTime
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.id != null">
			id = #{query.id}
		</if>
		<if test="query != null and query.feePercent != null">
			and fee_percent = #{query.feePercent}
		</if>
		<if test="query != null and query.moneyPercent != null">
			and money_percent = #{query.moneyPercent}
		</if>
		<if test="query != null and query.scorePercent != null">
			and score_percent = #{query.scorePercent}
		</if>
		<if test="query != null and query.sliderImg1 != null and query.sliderImg1 != ''">
			and slider_img1 like concat('%', #{query.sliderImg1}, '%')
		</if>
		<if test="query != null and query.sliderImg2 != null and query.sliderImg2 != ''">
			and slider_img2 like concat('%', #{query.sliderImg2}, '%')
		</if>
		<if test="query != null and query.sliderImg3 != null and query.sliderImg3 != ''">
			and slider_img3 like concat('%', #{query.sliderImg3}, '%')
		</if>
		<if test="query != null and query.sliderImg4 != null and query.sliderImg4 != ''">
			and slider_img4 like concat('%', #{query.sliderImg4}, '%')
		</if>
		<if test="query != null and query.sliderImg5 != null and query.sliderImg5 != ''">
			and slider_img5 like concat('%', #{query.sliderImg5}, '%')
		</if>
		<if test="query != null and query.regBonus != null">
			and reg_bonus = #{query.regBonus}
		</if>
		<if test="query != null and query.createTimeStart != null and query.createTimeEnd == null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeStart}
		</if>
		<if test="query != null and query.createTimeStart == null and query.createTimeEnd != null">
			and create_time <![CDATA[ <= ]]> #{query.createTimeEnd}
		</if>
		<if test="query != null and query.createTimeStart != null and query.createTimeEnd != null">
			and create_time <![CDATA[ >= ]]> #{query.createTimeStart} and create_time <![CDATA[ <= ]]> #{query.createTimeEnd}
		</if>
		<if test="query != null and query.updateTimeStart != null and query.updateTimeEnd == null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeStart}
		</if>
		<if test="query != null and query.updateTimeStart == null and query.updateTimeEnd != null">
			and update_time <![CDATA[ <= ]]> #{query.updateTimeEnd}
		</if>
		<if test="query != null and query.updateTimeStart != null and query.updateTimeEnd != null">
			and update_time <![CDATA[ >= ]]> #{query.updateTimeStart} and update_time <![CDATA[ <= ]]> #{query.updateTimeEnd}
		</if>
		
    </sql>

    <select id="getById" parameterType="long" resultType="basicSettingDO">
        select
        <include refid="select_columns"/>
        from t_basic_setting where id = #{id}
    </select>

    <select id="listAll" resultType="basicSettingDO">
        select
        <include refid="select_columns"/>
        from t_basic_setting
        order by update_time desc, create_time desc
    </select>

    <select id="listPage" parameterType="top.zywork.query.PageQuery" resultType="basicSettingDO">
        select
        <include refid="select_columns"/>
        from t_basic_setting
        order by
        <if test="sort != null and sort != ''">
            ${sort} ${order}
        </if>
        <if test="sort == null or sort == ''">
            update_time desc, create_time desc
        </if>
        limit #{beginIndex}, #{pageSize}
    </select>

    <select id="count" resultType="long">
        select count(*) from t_basic_setting
    </select>

    <select id="listPageByCondition" resultType="basicSettingDO">
        select
        <include refid="select_columns"/>
        from t_basic_setting
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="pager.sort != null and pager.sort != ''">
            ${pager.sort} ${pager.order}
        </if>
        <if test="pager.sort == null or pager.sort == ''">
            update_time desc, create_time desc
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_basic_setting
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
